tmplNode(node, functions) ::= <<
<if(node.IsRoot)><tmplRootNode(node, functions)><else><tmplRegularNode(node)><endif>
>>

singleArgumentSignature(arg) ::= "<if(arg.IsParams)>params <endif><arg.TypeInfo.TypeName> <arg.ArgumentName>"

argumentsSignature(methodInfo) ::= "<first(methodInfo.Arguments):singleArgumentSignature()><trunc(methodInfo.Arguments):{ arg | , <arg:singleArgumentSignature()>}>"
argumentsCall(methodInfo) ::= "<first(methodInfo.Arguments).ArgumentName><trunc(methodInfo.Arguments):{ arg | , <arg.ArgumentName>}>"

tmplRegularChildNode(child) ::= <<
<child.TransitionDetails.Constructors:{ctor |
public <child.ClassName> <child.Name>(<argumentsSignature(ctor)>)
{
    return new <child.ClassName>(this, new <child.TransitionDetails.TypeInfo.TypeName>(<argumentsCall(ctor)>));
\}
}>
>>

tmplRootChildNode(child) ::= <<
<child.TransitionDetails.Constructors:{ctor |
public static <child.ClassName> <child.Name>(<argumentsSignature(ctor)>)
{
    return new <child.ClassName>(new NilQueryPart(), new <child.TransitionDetails.TypeInfo.TypeName>(<argumentsCall(ctor)>));
\}
}>
>>

tmplRootNode(node, functions) ::= <<
public static class SQL
{
    <functions:{function | <tmplFunction(function)>}>
    <node.Children:{child | <tmplRootChildNode(child)>}>
}
>>

tmplRegularNode(node) ::= <<


public class <node.ClassName>: TransitionBasedQueryPart
{
    public <node.ClassName>(QueryPart tail, IBuilderTransition transition): base(tail, transition)
    {
    }

    <node.Children:{child | <tmplRegularChildNode(child)>}>
}
>>

tmplFunction(function) ::= <<
<function.Constructors:{ctor |
public static <function.ResultType.TypeName> <function.FunctionName>(<argumentsSignature(ctor)>)
{
    return new <function.FunctionType.TypeName>(<argumentsCall(ctor)>).Execute();
\}
}>
>>

_tmpl_file(name, functions, nodes, usings, version) ::= <<
//------------------------------------------------------------------------------ 
// \<auto-generated\> 
// This code was generated by a tool. 
// Runtime Version: <version>
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// \</auto-generated\> 
//------------------------------------------------------------------------------

namespace Quantum
{
<usings:{namespace | 
    using <namespace>;
}>
    
    <nodes:{node | <tmplNode(node, functions)>}>
}
>>